//作者：冼树华
//QQ:  56472465

import UIKit

//父类
class 车{
    var 时速 = 0
    var 描述 : String{
        return "时速\(时速)公里每小时"
    }
    
    func 声音(){
    }
}

//子类继承父类的一般使用
class 自行车: 车{
    var 有篮子 = false
}
let 一辆自行车 = 自行车()
一辆自行车.有篮子 = true
一辆自行车.时速 = 25
print("一辆自行车：\(一辆自行车.描述)，是否有篮子：\(一辆自行车.有篮子)")



//子类重写父类的方法
class 动车: 车{
    //重写方法
    override func 声音(){
        print("嘟---嘟---嘟")
    }
}
let 一辆动车 = 动车()
//print("一辆动车的声音是：",false)
print("一辆动车的声音是：", terminator: "")
一辆动车.声音()


//子类重载父类的属性
class 汽车: 车{
    var 轮子数 = 0
    
    //重写为只读getter
    override var 描述:String{
        //调用父类的方法
        return super.描述 + ",有\(轮子数)个轮子"
    }
    
    //重写为属性观察器
    override var 时速:Int{
        didSet{
            if(时速 > 120){
                //print("警告：你速度超过120公里每小时，为了您的安全，请进入自动驾驶模式！",false)
                print("警告：你速度超过120公里每小时，为了您的安全，请进入自动驾驶模式！", terminator: "")
            }
        }
    }
    
}
let 一辆汽车 = 汽车()
一辆汽车.轮子数 = 4
一辆汽车.时速 = 150
print(一辆汽车.描述)



//子类的最终类，其他人就不能再继续情侣自行车类了
final class 情侣自行车: 自行车{
    var 当前乘客数 = 0
}
let 一辆情侣自行车 = 情侣自行车()
一辆情侣自行车.当前乘客数 = 2
一辆情侣自行车.时速 = 15
print("一辆情侣自行车：\(一辆情侣自行车.描述)，当前乘客：\(一辆情侣自行车.当前乘客数)")

